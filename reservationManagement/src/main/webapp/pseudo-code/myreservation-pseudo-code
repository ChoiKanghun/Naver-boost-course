				reserve.js

서버로부터 json 받아오기.
	jsp에 있는 reservationEmail attribute를 이용 -> json 신청.
	json을 받아와서 Summary에 들어가야 할 정보 입력.
전체에 숫자 추가
	'전체' 쿼리 선택
	쿼리 innerHTML을 서버에서 json으로 받아온 size로 설정.
이용예정, 이용완료, 취소 및 환불에 들어갈 숫자 구하기.
	현재 시각 가져오기.
	취소 변수, 예약날짜가 현재보다 큰 경우(toBePerformed), 작은 경우(alreadyPerformed) 

변수 선언.
	json.reservations 배열를 돌며 객체 하나마다 취소했는지 안했는지 확인.
		하나하나 돌면서 예약날짜를 parse해서 변수에 담음(performDate).
		cancel인지 alreadyPerformed인지 toBePerformed인지 확인할 배열 생성
		(배열이름은 arrayToSaveWhereToAddArticle)
		if 취소했다면 then {
			취소 카운트++;
			(변수명 cancelPerform)
			arrayToSaveWhereToAddArticle[index]번째에 "cancel"을 담음.
		}
		else if 예약날짜가 현재보다 큰 경우 then{
			toBePerformed++;
			arrayToSaveWhereToAddArticle[index]번째에 "alreadyPerformed" 담음
		}
		else {
			alreadyPerformed++;
			arrayToSaveWhereToAddArticle[index]번째에 "toBePerformed"를 담음
		}
이용예정에 숫자 추가.
	'이용예정' 쿼리 선택
	toBePerformed 개수만큼 추가.
이용완료에 숫자 추가.
	'이용완료' 쿼리 선택
	alreadyPerformed 개수 만큼 추가.
취소, 환불에 숫자 추가.	
	'취소, 환불' 쿼리 선택.
	cancelPerform 개수 만큼 추가.
예약 정보 추가
	if 오류 then {
		wrap_mylist 클래스 display=none;
		err 클래스 display block;
	}	
	template 설정하기.	
		template 선택
		template 내용 작성.
			No. 뒤에 reservationInfoId 넣어주기.
			일정에 reservationDate 넣어주기.
				handlebar에 알맞은 형식으로 date를 나타내줄 함수 추가.
			내역에 displayInfo.productDescription 넣어주기.
			장소에 displayInfo.placeStreet(displayInfo.placeLot)
			업체에 displayInfo.placeName
			결제 예정 금액에 totalPrice 넣어주기.
		article을 추가할 target 변수 선언.(targetToAddArticle)
	json의 reservations 배열을 돌면서(forEach)
		if arrayToSaveWhereToAddArticle[index]번째(이하 flagStirng)가
		"cancel" 인 경우 then {
			(targetToAddArticle)
			에 card, used, cancel 클래스를 가진 요소 넣기.
		}
		else if "alreadyPerformed"인 경우 then {
			(targetToAddArticle)
			에 used, cancel 클래스를 가진 요소배열의 첫 번째를 넣기
		}
		else {
			(targetToAddArticle)
			에 used, confirmed 클래스를 가진 요소 넣기
		}
		targetToAddArticle에 template추가하기.
	취소된 예약, 이용완료된 예약에서 취소 버튼 display none으로 설정하기.


